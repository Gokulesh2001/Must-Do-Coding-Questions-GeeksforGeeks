class LinkedList
{
    static Node segregate(Node head)
    {
        // add your code here
        
        if(head==null||head.next==null){
            return head;
        }
        
        Node zeroD=new Node(0);
        Node oneD=new Node(0);
        Node twoD=new Node(0);
        
        
        Node zero=zeroD;
        Node one=oneD;
        Node two=twoD;
        
        while(head!=null){
            if(head.data==0){
                zero.next=head;
                zero=zero.next;
                head=head.next;
            }
            else if(head.data==1){
                one.next=head;
                one=one.next;
                head=head.next;
            }
            else{
                two.next=head;
                two=two.next;
                head=head.next;
            }
        }
        
        zero.next = (oneD.next!=null) ? (oneD.next) : (twoD.next);
        one.next=twoD.next;
        two.next=null;
         head = zeroD.next; 
        return head; 
    }
}
