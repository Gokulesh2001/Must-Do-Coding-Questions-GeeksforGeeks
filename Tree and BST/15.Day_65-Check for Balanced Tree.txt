class Tree
{
    boolean result=true;
     /* This function should return tree if passed  tree 
     is balanced, else false. */
    boolean isBalanced(Node root)
    {
	// Your code here
	return isBal(root);
    }
    
    
    
    
    boolean isBal(Node root){
        if(root==null){
	    return true;
	}
	if(root.left==null&&root.right==null){
	    return true;
	}
	
	int left=height(root.left);
	int right=height(root.right);
	if(left==right||(left+1)==right||left==(right+1)){
	    return isBal(root.left)&&isBal(root.right);
	}
	return false;
    }
    
    
    
    int height(Node node) {
        // code here 
        int height=0;
        if(node==null){
            return 0;
        }
        int heightOfLeft=height(node.left)+1;
        int heightOfRight=height(node.right)+1;
        if(heightOfLeft>heightOfRight){
            height=heightOfLeft;
        }
        else{
            height=heightOfRight;
        }
        return height;
    }
}

