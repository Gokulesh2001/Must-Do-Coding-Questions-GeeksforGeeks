import java.util.*;
import java.lang.*;
import java.io.*;

class GFG {
	public static void main (String[] args) throws IOException {
		//code
		BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
		int t=Integer.parseInt(br.readLine().trim());
		while(t-->0){
		    String str=br.readLine().trim();
		    GFG obj=new GFG();
		    System.out.println(obj.Rearrange(str));
		}
		
	}
		
		int Rearrange(String str){
		    
		    Map<Character,Integer> counts=new HashMap<>();
		    int ans=1;
		    for(char c:str.toCharArray()){
		        counts.put(c,counts.getOrDefault(c,0)+1);
		    }
		    
		    PriorityQueue<Character> maxHeap=new PriorityQueue<>((a,b) -> counts.get(b)-counts.get(a));
		    maxHeap.addAll(counts.keySet());
		    StringBuilder result= new StringBuilder();
		    while(maxHeap.size()>1){
		        char current=maxHeap.remove();
		        char next=maxHeap.remove();
		        result.append(current);
		        result.append(next);
		        counts.put(current,counts.get(current)-1);
		        counts.put(next,counts.get(next)-1);
		        if(counts.get(current)>0){
		           maxHeap.add(current);
		        }
		         if(counts.get(next)>0){
		           maxHeap.add(next);
		        }
		    }
		    
		  //  while(!maxHeap.isEmpty()){
		  if(maxHeap.isEmpty()==false){
		        char last=maxHeap.remove();
		        if(counts.get(last)>1){
		            return 0;
		        }
		        result.append(last);
		} 
// 		}
		return ans;
	}
	
	
}