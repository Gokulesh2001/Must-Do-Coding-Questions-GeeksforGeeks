class Solution
{
    
    // int countDistinct(int arr[]){
    //     Arrays.sort(arr);
    //     int i=0;
    //     int count=0;
    //     while(i<arr.length){
    //         if(i>0&&arr[i]==arr[i-1]){
    //             i++;
    //         }
    //         else{
    //             count+=1;
    //             i++;
    //         }
    //     }
    //     return count;
    // }
    ArrayList<Integer> countDistinct(int A[], int n, int k)
    {
        // code here
        ArrayList<Integer> result=new ArrayList<Integer>();
        HashMap<Integer,Integer> map=new HashMap<Integer,Integer>();
        
        for(int i=0;i<k;i++){
            map.put(A[i],map.getOrDefault(A[i],0)+1);
        }
        result.add(map.size());
            
        for(int i=k;i<n;i++){
            if(map.get(A[i-k])==1){
                map.remove(A[i-k]);
            }
            else{
                map.put(A[i-k],map.getOrDefault(A[i-k],0)-1);
            }
            map.put(A[i],map.getOrDefault(A[i],0)+1);
            
            result.add(map.size());
            
        }
        return result;
    }
}

