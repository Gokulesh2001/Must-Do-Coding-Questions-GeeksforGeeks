class Solution {
    
    ArrayList<ArrayList<Integer>> result=new ArrayList<ArrayList<Integer>>();
    public ArrayList<ArrayList<Integer>> fourSum(int[] arr, int k) {
          // code here
          Hashtable<String,Integer> map=new Hashtable<String,Integer>();
          int n=arr.length;
         Arrays.sort(arr);
      for(int i=0;i<n-3;i++){
          if(i>0&&arr[i]==arr[i-1]) continue;
          for(int j=i+1;j<n-2;j++){
              if(j>i+1&&arr[j]==arr[j-1]) continue;
              int left=j+1;
              int right=n-1;
              while(left<right){
              if(arr[i]+arr[j]+arr[left]+arr[right]==k){
                //   if(map.getOrDefault((i+j+left+right+""),0)==0){
                  foundQuadruple(arr[i],arr[j],arr[left],arr[right]);
                //   map.put((i+j+left+right+""),1);
                //   }
                  left++;
                  right--;
                  while(left<right&&arr[left]==arr[left-1]){
                      left++;
                  }
                   while(left<right&&arr[right]==arr[right+1]){
                      right--;
                  }
              }
              else if(arr[i]+arr[j]+arr[left]+arr[right]>k){
                  right--;
              }
              else{
                  left++;
              }
              }
          }
      }
      return result;
    }
    public void foundQuadruple(int one,int two,int three,int four){
        ArrayList<Integer> list=new ArrayList<Integer>();
        list.add(one);
        list.add(two);
        list.add(three);
        list.add(four);
        result.add(new ArrayList<>(list));
    }
}