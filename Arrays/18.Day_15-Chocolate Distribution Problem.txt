/*package whatever //do not write package name here */

import java.util.*;
import java.lang.*;
import java.io.*;

class GFG {
    
	public static void main (String[] args) throws IOException {
		//code
		
		
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		int t = Integer.parseInt(br.readLine().trim()); //Inputting the testcases
		while(t-->0){
		    int n = Integer.parseInt(br.readLine().trim());
		    int arr[] = new int[n];
		    String inputLine[] = br.readLine().trim().split(" ");
		    for(int i=0; i<n; i++){
		        arr[i] = Integer.parseInt(inputLine[i]);
		    }
		    int m = Integer.parseInt(br.readLine().trim());
		    Solution obj=new Solution();
		    System.out.println(obj.Distribution(arr, n,m));
		}
// 		Scanner sc=new Scanner(System.in);
	
		
// 	int T=sc.nextInt();
// 	int tc=0;
	
// 	Solution obj=new Solution();
// 	while(tc<T){
// 	    int n=sc.nextInt();
// 	    int[] arr=new int[n];
// 		    for(int i=0;i<=n-1;i++){
// 		        arr[i]=sc.nextInt();
// 		    }
	    
// 	    System.out.println(obj.maxWater(arr,n));
// 	    tc++;
// 	}
		
		
		
	}
}
class Solution {
    public static int Distribution(int arr[], int n,int m) {
        if(m==0 || n==0){
            return 0;
        }
        if(n<m){
            return -1;
        }
        Arrays.sort(arr);
        int min=Integer.MAX_VALUE;
        for(int i=0;i+m-1<n;i++){
            int diff=arr[i+m-1]-arr[i];
            if(diff<min){
                min=diff;
            }
        }
        return min;
        
}
}

