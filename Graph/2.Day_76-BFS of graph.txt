class Solution
{
    HashSet<Integer> set=new HashSet<Integer>();
    Queue<Integer> q=new LinkedList<>();
    ArrayList<Integer> list=new ArrayList<Integer>();
    public ArrayList<Integer> bfsOfGraph(int V, ArrayList<ArrayList<Integer>> adj)
    {
        // Code here
        bfsOfGraphHelper(0,adj);
        return list;
    }
    public void bfsOfGraphHelper(int s,ArrayList<ArrayList<Integer>> adj){
        // set.add(s);
        q.add(s);
       
        while(!q.isEmpty()){
            int temp=q.remove();
            if(set.contains(temp)==false){
               list.add(temp);
            }
            set.add(temp);
            
            for(int i=0;i<adj.get(temp).size();i++){
                if(set.contains(adj.get(temp).get(i))==false){
                q.add(adj.get(temp).get(i));
                }
                
            
            }
        
        
        }
}
}