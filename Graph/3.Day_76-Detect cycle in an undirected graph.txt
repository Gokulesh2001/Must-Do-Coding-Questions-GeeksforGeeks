class Solution
{
    HashSet<Integer> set=new HashSet<Integer>();
    public boolean isCycle(int V, ArrayList<ArrayList<Integer>> adj)
    {
        // Code here
        int visited[] = new int[V];
         for (int i = 0; i < V; i++) 
            visited[i] = 0; 
        for(int i=0;i<V;i++){
            if(visited[i]!=1){
                if(dfs(i,adj,-1,visited)){
                    return true;
                }
            }
        }
     return false;
        
    }
    public boolean dfs(int s, ArrayList<ArrayList<Integer>> adj,int parent,int[] visited){
        visited[s]=1;
        
        
        List<Integer> children=adj.get(s);
        for(Integer child:children){
            if(visited[child]!=1){
                
                if(dfs(child,adj,s,visited)){
                    return true;
                }
                
            }
            else if(child!=parent){
                return true;
            }
            
        }
        return false;
    }
    
}