class Solution
{
    public int rotOranges(int a[][],int r, int c)
    {
        // Write your code here
        Queue<int[]> rotten=new LinkedList<>();
        int fresh=0,t=0;
        
        for(int i=0;i<r;i++){
            for(int j=0;j<c;j++){
                if(a[i][j]==2)rotten.add(new int[]{i,j});
                else if(a[i][j]==1)fresh++;
            }
        }
        
        while(!rotten.isEmpty()){
            int num=rotten.size();
            for(int i=0;i<num;i++){
                int x=rotten.peek()[0],y=rotten.peek()[1];
                rotten.remove();
                if(x>0&&a[x-1][y]==1){a[x-1][y]=2;fresh--;rotten.add(new int[]{x-1,y});};
                if(y>0&&a[x][y-1]==1){a[x][y-1]=2;fresh--;rotten.add(new int[]{x,y-1});};
                if(x<r-1&&a[x+1][y]==1){a[x+1][y]=2;fresh--;rotten.add(new int[]{x+1,y});};
                if(y<c-1&&a[x][y+1]==1){a[x][y+1]=2;fresh--;rotten.add(new int[]{x,y+1});};
            }
            if(!rotten.isEmpty())t++;
        }
        return (fresh==0)?t:-1;
        
        
    }
}
      